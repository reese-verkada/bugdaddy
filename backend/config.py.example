"""
BugDaddy requires a config.py file in /backend/ to run
Please edit this file as desired and remove the .example extension
Every single variable in this file requires a value
If a matching environment variable can be found, that value will be used (the first argument in the .get())
Otherwise, the default value will be used if available (the second argument in the .get())
"""

import os

#Frontend URL
FRONTEND_URL = os.environ.get('FRONTEND_URL',"http://localhost:8080")
#The username or email used to authenticate with JIRA
JIRA_USERNAME=os.environ.get('JIRA_USERNAME')
#The password used to authenticate with JIRA
JIRA_PASSWORD=os.environ.get('JIRA_PASSWORD')
#The URL for JIRA, such as "https://company.atlassian.net"
JIRA_URL=os.environ.get('JIRA_URL')
#We will only import an issue if its resolution matches this configuration; default is "unresolved"
JIRA_TRACK_RESOLUTION=os.environ.get('JIRA_TRACK_RESOLUTION',"unresolved")
#The URL where we can find the IdP SAML metadata XML file; please use HTTPS
SAML_METADATA_URL=os.environ.get('SAML_METADATA_URL',"http://localhost:8080/static/metadata.xml")
#This value can be anything you want, but a long, random value is recommended; this is the key used to sign cookies
SAML_SECRET_KEY=os.environ.get('SAML_SECRET_KEY')
#This is the role the subject needs to be assigned by the IdP in order for the user to have admin (read/write) access; default is "bug_admin"
SAML_ADMIN_ROLE=os.environ.get('SAML_ADMIN_ROLE',"Bug Daddy - Admin")
#This is the role the subject needs to be assigned by the IdP in order for the user to have viewer (read) access; default is "bug_viewer"; change to None for public read access
SAML_VIEWER_ROLE=os.environ.get('SAML_VIEWER_ROLE',"Access - Bug Daddy")
#This is the number of MINUTES of inactivity the app waits before logging a user out
SESSION_TIMEOUT=int(os.environ.get('SESSION_TIMEOUT',1440))
#This is the refresh_token from Salesforce used to authenticate with them.  Please see README for help with getting this token.
SALESFORCE_REFRESH_TOKEN = os.environ.get('SALESFORCE_REFRESH_TOKEN')
#This is the URL for your instance on Salesforce
SALESFORCE_INSTANCE = os.environ.get('SALESFORCE_INSTANCE')
#This is the client ID shown in Salesforce App Manager
SALESFORCE_CLIENT_ID = os.environ.get('SALESFORCE_CLIENT_ID')
#This is the client secret shown in Salesforce App Manager
SALESFORCE_CLIENT_SECRET = os.environ.get('SALESFORCE_CLIENT_SECRET')
#This is the ID for the report we want to pull data from.  Pull up the report on SFDC and copy the ID from the URL: .../Report/<reportId>/view...
SALESFORCE_REPORT_ID = os.environ.get('SALESFORCE_REPORT_ID')
#This is the URI for the database for SQLAlchemy
DATABASE_URI = os.environ.get('DATABASE_URI','sqlite:///db/bugdaddy.db')